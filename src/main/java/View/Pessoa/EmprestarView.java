/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.Pessoa;

import DAO.CaixaDAO;
import DAO.EmprestimoDAO;
import DAO.PessoaDAO;
import DAO.RevistaDAO;
import Exception.EmprestimoException;
import Interface.IEmprestimoDAO;
import Model.Caixa;
import Model.Emprestimo;
import Model.Pessoa;
import Model.Pessoas.Amigo;
import Model.Pessoas.Dono;
import Model.Revista;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriela
 */
public class EmprestarView extends javax.swing.JFrame {

    PessoaDAO pessoaDAO = new PessoaDAO();
    RevistaDAO revistaDAO = new RevistaDAO();
    CaixaDAO caixaDAO = new CaixaDAO();

    /**
     * Creates new form AddEmprestimoPessoa
     */
    public EmprestarView() {
        initComponents();
        preencherComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLData = new javax.swing.JLabel();
        tfData = new javax.swing.JTextField();
        jAmigo = new javax.swing.JLabel();
        btAdicionar = new java.awt.Button();
        cbAmigo = new javax.swing.JComboBox<>();
        jLRevista = new javax.swing.JLabel();
        cbRevista = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbDono = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Emprestar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLData.setText("Data:");
        jLData.setDoubleBuffered(true);

        jAmigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jAmigo.setText("Amigo");

        btAdicionar.setActionCommand("Adicionar");
        btAdicionar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btAdicionar.setLabel("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarEmprestimo(evt);
            }
        });

        jLRevista.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLRevista.setText("Revista");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Dono");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLData)
                        .addGap(18, 18, 18)
                        .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLRevista)
                            .addComponent(jAmigo)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbRevista, 0, 389, Short.MAX_VALUE)
                            .addComponent(cbAmigo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbDono, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLData)
                    .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbDono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAmigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAmigo))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLRevista)
                    .addComponent(cbRevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLRevista.getAccessibleContext().setAccessibleName("jLRevista");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarEmprestimo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarEmprestimo

        realizarEmprestimo();
    }//GEN-LAST:event_btAdicionarEmprestimo

    private void preencherComboBox() {
        for (Pessoa a : pessoaDAO.recuperarTodasPessoas()) {
            if (a instanceof Amigo) {
                cbAmigo.addItem(a);
            } else {
                cbDono.addItem(a);
            }
        }
        for (Revista r : revistaDAO.recuperarTodasRevistas()) {
            cbRevista.addItem(r);
        }

    }

    private Emprestimo recuperarEmprestimo() throws EmprestimoException {
        LocalDate dataHoraEmprestimo = getDataHora();
        Amigo amigo = (Amigo) cbAmigo.getSelectedItem();
        Dono dono = (Dono) cbDono.getSelectedItem();
        Revista revista = (Revista) cbRevista.getSelectedItem();
        Emprestimo emprestimo = Emprestimo.emprestar(dataHoraEmprestimo, dono, amigo, revista);

        if (amigo == null) {
            throw new EmprestimoException("Nenhum amigo selecionado");
        }

        if (dono == null) {
            throw new EmprestimoException("Nenhum dono selecionado");
        }

        return emprestimo;
    }

    private void realizarEmprestimo() {

        try {
            Revista revista = (Revista) cbRevista.getSelectedItem();
            Emprestimo emprestimo = recuperarEmprestimo();
            IEmprestimoDAO emprestimoRepositorio = new EmprestimoDAO();
            emprestimoRepositorio.adicionarEmprestimo(emprestimo);
            removerDaCaixa(revista);
            exibirMensagem("Empréstimo realizado com sucesso: " + emprestimo.toString());
            limparTela();
        } catch (EmprestimoException ex) {
            exibirMensagem("Não foi possível realizar o empréstimo");
        }

    }

    private void removerDaCaixa(Revista r) {
        for (Caixa c : caixaDAO.recuperarTodasCaixas()) {
            if (c.getRevistas().contains(r)) {
                c.getRevistas().remove(r);
            }
            c.reduzirRevistaContador();
        }
    }

private void exibirMensagem(String msg) {
        JOptionPane.showMessageDialog(null, msg);
    }

    private void limparTela() {
        tfData.setText("");
    }

    private LocalDate getDataHora() throws EmprestimoException {
        String diaMesAno = tfData.getText();
        String data = diaMesAno;

        try {
            DateTimeFormatter formatoData = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            LocalDate dataEmprestimo = LocalDate.parse(data, formatoData);
            return dataEmprestimo;
        } catch (DateTimeParseException e) {
            throw new EmprestimoException("Data inválida");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btAdicionar;
    private javax.swing.JComboBox<Pessoa> cbAmigo;
    private javax.swing.JComboBox<Pessoa> cbDono;
    private javax.swing.JComboBox<Revista> cbRevista;
    private javax.swing.JLabel jAmigo;
    private javax.swing.JLabel jLData;
    private javax.swing.JLabel jLRevista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfData;
    // End of variables declaration//GEN-END:variables
}
